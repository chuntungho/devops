version: '3'

volumes:
  opensearch-data1:
  opensearch-data2:
  fluentd-log:

networks:
  opensearch-net:

# refer to https://opensearch.org/docs/latest/opensearch/install/docker/
services:
  # https://opensearch.org/docs/latest/opensearch/install/important-settings
  # increase max_map_count to fix the issue that vm.max_map_count is too low.
  # sysctl -w vm.max_map_count=262144
  # echo "vm.max_map_count=262144" >> /etc/sysctl.conf
  opensearch-node1:
    image: opensearchproject/opensearch:2
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      # below settings required for cluster
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2
      # uncomment below to disable security and deploy single node in development env
      # - "DISABLE_INSTALL_DEMO_CONFIG=true" # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      # - "DISABLE_SECURITY_PLUGIN=true" # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
      # - "discovery.type=single-node" # disables bootstrap checks that are enabled when network.host is set to a non-loopback address
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer
    networks:
      - opensearch-net
  opensearch-node2:
    image: opensearchproject/opensearch:2
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_master_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net

  # If you override opensearch_dashboards.yml settings using environment variables in your compose file, 
  # use all uppercase letters and replace periods with underscores (for example, for opensearch.hosts, use OPENSEARCH_HOSTS)
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    container_name: opensearch-dashboards
    ports:
      - 5600:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]'
      # disable multi-tenancy
      # https://opensearch.org/docs/1.2/security-plugin/access-control/multi-tenancy/
      OPENSEARCH_SECURITY_MULTITENANCY_ENABLED: 'false'
      # uncomment below to disable sercurity for test
      # DISABLE_SECURITY_DASHBOARDS_PLUGIN: 'true'
    networks:
      - opensearch-net

  # fluentd for log aggregate
  fluentd-server:
    image: chuntungho/fluentd-server
    build: ./fluentd
    volumes:
      - ./fluentd/fluentd.conf:/fluentd/etc/fluent.conf
      - fluentd-log:/fluentd/log
    networks:
      - opensearch-net
    ports:
      - 24224:24224
      - 24224:24224/udp
    expose:
      - "24224"

  # https://github.com/openzipkin/zipkin/issues/3430
  # use opensearch by setting `persistent.compatibility.override_main_response_version` to true
  # PUT _cluster/settings
  # {
  #  "persistent": {
  #    "compatibility": {
  #    "override_main_response_version": true
  #     }
  #   }
  # }
  zipkin-server:
    image: openzipkin/zipkin-slim
    networks:
      - opensearch-net
    ports:
      - "9411:9411"
    environment:
      STORAGE_TYPE: elasticsearch
      ES_HOSTS: https://opensearch-node1:9200
      ES_USERNAME: admin
      ES_PASSWORD: admin
      # https://github.com/openzipkin/zipkin/pull/3100
      ES_SSL_NO_VERIFY: "true"
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O/dev/null", "http://localhost:9411/health" ]

  # https://github.com/opensearch-project/data-prepper/blob/main/docs/trace_analytics.md
  data-prepper:
    restart: unless-stopped
    container_name: data-prepper
    image: opensearchproject/data-prepper:2
    volumes:
      - ./data-prepper/cert:/cert
      - ./data-prepper/pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml
      - ./data-prepper/config.yaml:/usr/share/data-prepper/config/data-prepper-config.yaml
    networks:
      - opensearch-net
    ports:
      - "21890:21890"

  # It is better to deploy it on the client side
  otel-collector:
    restart: unless-stopped
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:0.81.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    # https://opentelemetry.io/docs/collector/configuration/
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    networks:
      - opensearch-net
    ports:
      - "4317:4317"  # otlp grpc port
