# https://spring.io/guides/topicals/spring-boot-docker
# based on openjdk11 hotspot
FROM adoptopenjdk/openjdk11:alpine-slim
LABEL version="1.1" \
    description="All application images built from this Dockerfile" \
    maintainer="ho@chuntung.com"

# multi-arguments available after 20.10
ARG SOURCE_FILE="target/*.jar"
ARG IMAGE_NAME="app"

ENV JAVA_OPTS="-server -Xms512m -Xmx512m" APP_ENV="test" CONSUL_HOST="consul-server"
ENV OTLP_ENDPOINT="http://otlp-collector:4317" OTEL_OPTS="-Dotel.instrumentation.spring-scheduling.enabled=false"

VOLUME ["/tmp"]

WORKDIR /opt/java

# https://github.com/open-telemetry/opentelemetry-java-instrumentation#getting-started
ADD https://repo1.maven.org/maven2/io/opentelemetry/javaagent/opentelemetry-javaagent/1.27.0/opentelemetry-javaagent-1.27.0.jar opentelemetry-javaagent.jar

RUN printf '#!/bin/sh\n\
set -x\n\
exec java \
-Dfile.encoding=UTF-8 \
-Duser.timezone=GMT+8 \
-Djava.awt.headless=true \
-Djava.net.preferIPv4Stack=true \
-XX:+HeapDumpOnOutOfMemoryError \
-XX:HeapDumpPath=/tmp/${IMAGE_NAME}-heapdump.hprof  \
-XX:+PrintCommandLineFlags \
-javaagent:/opt/java/opentelemetry-javaagent.jar \
-Dotel.service.name=${IMAGE_NAME} \
-Dotel.exporter.otlp.endpoint=${OTLP_ENDPOINT} \
${JAVA_OPTS} \
-jar app.jar $@' >> entrypoint.sh && chmod 755 entrypoint.sh

ENTRYPOINT ["./entrypoint.sh"]

# the mutable line at end
COPY ${SOURCE_FILE} app.jar